file_2021_05 <- read_csv("202105-divvy-tripdata.csv")
file_2021_06 <- read_csv("202106-divvy-tripdata.csv")
file_2021_07 <- read_csv("202107-divvy-tripdata.csv")
file_2021_08 <- read_csv("202108-divvy-tripdata.csv")
file_2021_09 <- read_csv("202109-divvy-tripdata.csv")
file_2021_10 <- read_csv("202110-divvy-tripdata.csv")
file_2021_11 <- read_csv("202111-divvy-tripdata.csv")
file_2021_12 <- read_csv("202112-divvy-tripdata.csv")
head(file_2021_01)
View(file_2021_01)
file_2021_01$rideable_type %>% unique()
file_2021_01$ride_id %>% unique()
range(file_2021_01$started_at)
range(file_2021_01$ended_at)
boxplot(file_2021_01)
summary(file_2021_01$)
summary(file_2021_01)
file_2021_02$ride_id %>% unique()
View(file_2021_02)
skimr::skim(file_2021_01)
head(file_2021_01)
colnames(file_2021_01)
#checking datatypes in dataset
lapply(file_2021_01,class)
lapply(file_2021_02,class)
str(file_2021_01)
#Unique data
file_2021_01$ride_id %>% unique()
#Unique data
file_2021_01$ride_id %>% n_unique()
n_distinct(file_2021_01$ride_id)
n_distinct(file_2021_01$ride_id)
n_row(file_2021_01$ride_id)
?n_row
nrow(file_2021_01$ride_id)
?nrow
nrow(file_2021_01)
n_distinct(file_2021_01$ride_id)
nrow(file_2021_01)
n_distinct(file_2021_02$ride_id)
nrow(file_2021_02)
View(file_2021_01)
View(file_2021_01)
n_distinct(file_2021_01$ride_id)
nrow(file_2021_01)
dim(file_2021_01)
n_distinct(file_2021_02$ride_id)
nrow(file_2021_02)
dim(file_2021_02)
skimr::skim(file_2021_01)
summary(file_2021_01)
#Check if dataset is null
lapply(file_2021_02,is.nul)
#Check if dataset is null
lapply(file_2021_02,is.null)
lapply(file_2021_01,is.null)
lapply(file_2021_02,is.null)
#Check duplicate values
duplicated(file_2021_01)
#Check duplicate values
sum(duplicated(file_2021_01))
sum(duplicated(file_2021_02))
###Data transformation
#Rename date columns to maintain consistency
colnames(file_2021_01)
file_2021_01 <- file_2021_01 %>% rename("start_date"="started_at")
###Data transformation
#Rename date columns to maintain consistency
colnames(file_2021_01)
file_2021_02 <- file_2021_02 %>% rename("start_date"="started_at","end_date"="ended_at")
colnames(file_2021_02)
summary(file_2021_01)#Can see NA values if they are there
boxplot(file_2021_01)
airquality
boxplot(airquality)
boxpot(file_2021_01$start_station_id)
boxplot(file_2021_01$start_station_id)
library(ggstatsplot)
install.packages("ggstatsplot")
install.packages("ggstatsplot")
library(ggstatsplot)
### Missing Value Analysis ###
sum(is.na(file_2021_01))
summary(is.na(file_2021_01))
boxplot(airquality)
iris
dim(iris)
data<- iris(,1:4)
data<- iris[,1:4]
data
dim(data)
boxplot(data)
quartiles <- quantile(data$Sepal.Width,probs = c(.25,.75),na.rm = FALSE)
quartiles
?quantile
IQR<- IQR(data$Sepal.Width)
iqr
IQR<- IQR(data$Sepal.Width)
iqr<- IQR(data$Sepal.Width)
iqr
quartiles[1]
quartiles[2]
lower <-quartiles[1] - 1.5*IQR
lower
upper <- quartiles[2]-1.5*IQR
upper
iqr
IQR
data_no_outlier <- subset(data,data$Sepal.Width > lower & data$Sepal.Width<upper)
data_no_outlier
dim(data_no_outlier)
dim(data)
dim(subset(data, data$Sepal.Width > Lower & data$Sepal.Width < Upper)
dim(data_no_outlier)
dim(subset(data, data$Sepal.Width > Lower & data$Sepal.Width < Upper))
subset(data, data$Sepal.Width > Lower & data$Sepal.Width < Upper)
subset(data, data$Sepal.Width > lower & data$Sepal.Width < upper)
boxplot(data_no_outlier)
IQR<- IQR(data$Sepal.Width)
lower <-quartiles[1] - 1.5*IQR
upper <- quartiles[2]-1.5*IQR
upper <- quartiles[2]+1.5*IQR
upper
data_no_outlier <- subset(data,data$Sepal.Width > lower & data$Sepal.Width<upper)
data_no_outlier
dim(data_no_outlier)
boxplot(data_no_outlier)
file_2021_01
file_2021_01 <- file_2021_01 %>% rename("end_date"="ended_at")
file_2021_01
file_2021_02
head(file_2021_01)
file_2021_01$end_date - file_2021_01$start_date
class(file_2021_01$start_date)
file_2021_01
head(file_2021_01)
View(file_2021_01)
#Create ride_length column
file_2021_01$ride_length <- file_2021_01$end_date - file_2021_01$start_date
View(file_2021_01)
daily_activity$Date
day_of_week("2021-01-23 16:14:19")
weekdays("2021-01-23 16:14:19")
weekdays(2021-01-23 16:14:19)
weekdays(2021-01-23 16:14:19)
weekdays(2021-01-23)
weekdays(file_2021_01$start_date)
View(file_2021_01)
#Day_of week column that each ride started
#Date is okay so no need to format YYYY-MM-DD Poscxit
file_2021_01$day_of_week<-file_2021_01 %<% weekdays(start_date)
View(file_2021_01)
#Day_of week column that each ride started
#Date is okay so no need to format YYYY-MM-DD Poscxit
file_2021_01$day_of_week<-weekdays(start_date)
#Day_of week column that each ride started
#Date is okay so no need to format YYYY-MM-DD Poscxit
file_2021_01$day_of_week<-weekdays(file_2021_01$start_date)
wday(file_2021_01$start_date)
file_2021_01$day_of_week<-wday(file_2021_01$start_date)#gives 1-7 with sunday being 1
mean(file_2021_01$ride_length)
sum((file_2021_01$ride_length))
nrow(file_2021_01$ride_length)
nrow(file_2021_01)
88714076/96834
mean(file_2021_01$ride_length)/60
View(file_2021_01)
#15 mins per cycle race
#max ride_length
max(file_2021_01$ride_length)
min(file_2021_01$ride_length)
file_2021_01$ride_lengt %>% arrange()
file_2021_01$ride_length %>% arrange()
subset(file_2021_01,max(ride_length))
subset(file_2021_01,ride_length<100)
subset(file_2021_01,ride_length<100) %>% select(ride_length)
subset(file_2021_01,ride_length<100) %>% select(ride_length) %>%arrange()
subset(file_2021_01,ride_length<100) %>% select(ride_length) %>%arrange(desc)
subset(file_2021_01,ride_length<100) %>% select(ride_length) %>%arrange(ride_length)
subset(file_2021_01,ride_length==-125)
subset(file_2021_01,ride_length==-125 | ride_length=-103 | ride_length=0|ride_length=1)
subset(file_2021_01,ride_length==-125 | ride_length==-103 | ride_length==0|ride_length==1)
subset(file_2021_01,ride_length==-125 | ride_length==-103 | ride_length==0|ride_length==1) %>% select(start_date,end_date,ride_length)
boxplot(file_2021_01$ride_length)
subset(file_2021_01,ride_length==-125 | ride_length==-103 | ride_length==0|ride_length==1) %>% select(start_date,end_date,ride_length & ride_length<10)
subset(file_2021_01,ride_length==-125 | ride_length==-103 | ride_length==0|ride_length==1  & ride_length<10) %>% select(start_date,end_date,ride_length)
subset(file_2021_01,ride_length<10) %>% select(start_date,end_date,ride_length)
print(n=30)
ride_rows<- subset(file_2021_01,ride_length<10) %>% select(start_date,end_date,ride_length)
print(ride_rows,30)
View(ride_rows)
#15 mins per cycle race
#max ride_length
max(file_2021_01$ride_length)/60
#15 mins per cycle race
#max ride_length
max(file_2021_01$ride_length)/60/60
#15 mins per cycle race
#max ride_length
max(file_2021_01$ride_length)/60
#15 mins per cycle race
#max ride_length
max(file_2021_01$ride_length)
ride_rows<- subset(file_2021_01,ride_length==1189555) %>% select(start_date,end_date,ride_length)
subset(file_2021_01,ride_length==1189555)
file_2021_01$rideable_type %>% unique()
ride_rows<- subset(file_2021_01,ride_length<10) %>% select(start_date,end_date,ride_length)
ride_rows<- subset(file_2021_01,ride_length<10) %>% select(rideable_type,start_date,end_date,ride_length)
ride_rows<- subset(file_2021_01,ride_length<10) %>% select(rideable_type,start_date,end_date,ride_length) %>% arrange()
ride_rows<- subset(file_2021_01,ride_length<10) %>% select(rideable_type,start_date,end_date,ride_length) %>% arrange(rideable_type)
ride_rows<- subset(file_2021_01,ride_length<10 | rideable_type='docked_bike') %>% select(rideable_type,start_date,end_date,ride_length) %>% arrange(rideable_type)
ride_rows<- subset(file_2021_01,ride_length<10 | rideable_type=='docked_bike') %>% select(rideable_type,start_date,end_date,ride_length) %>% arrange(rideable_type)
ride_rows<- subset(file_2021_01, rideable_type=='docked_bike') %>% select(rideable_type,start_date,end_date,ride_length) %>% arrange(rideable_type)
ride_rows<- subset(file_2021_01, rideable_type=='docked_bike') %>% select(rideable_type,start_date,end_date,ride_length) %>% arrange(ride_length(desc))
ride_rows<- subset(file_2021_01, rideable_type=='docked_bike') %>% select(rideable_type,start_date,end_date,ride_length) %>% arrange(ride_length)
ride_rows<- subset(file_2021_01, rideable_type=='docked_bike') %>% select(rideable_type,start_date,end_date,ride_length) %>% arrange(desc(ride_length)
)
ride_rows<- subset(file_2021_01, rideable_type=='docked_bike') %>% select(rideable_type,start_date,end_date,ride_length,member_casual) %>% arrange(desc(ride_length))
ride_rows<- subset(file_2021_01, rideable_type=='docked_bike' & member_casual=='member') %>% select(rideable_type,start_date,end_date,ride_length,member_casual) %>% arrange(desc(ride_length))
#15 mins per cycle race
#max ride_length
max(file_2021_01$ride_length)/60
#19825.92 minutes,its a docked bike
#mode of day_of_week
file_2021_01 %>% group_by(day_of_week)
#19825.92 minutes,its a docked bike
#mode of day_of_week
file_2021_01 %>% group_by(day_of_week) %>% summarise(Total=n())
library("DT")
library("DT")
#19825.92 minutes,its a docked bike
#mode of day_of_week
mode_dayweek<- file_2021_01 %>% group_by(day_of_week) %>% summarise(Total=n())
datatable(mode_dayweek)
mode(file_2021_01$day_of_week)
ux[which.max(tabulate(match(file_2021_01, ux)))]
Mode <- function(file_2021_01) {
ux <- unique(file_2021_01)
ux[which.max(tabulate(match(file_2021_01, ux)))]
}
Mode <- function(file_2021_01$day_of_week) {
Mode(file_2021_01$day_of_week)
Mode <- function(x) {
uniq <- unique(x)
uniq[which.max(tabulate(match(x, uniq)))]
}
Mode(file_2021_01$day_of_week)
Mode(file_2021_01$day_of_week)
#Create a pivot table to quickly calculate and visualize the data
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length))
average_ride_length
#Create a pivot table to quickly calculate and visualize the data
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length)/60)
#Create a pivot table to quickly calculate and visualize the data
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length)/60)
average_ride_length
#Create a pivot table to quickly calculate and visualize the data
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length >0)/60)
average_ride_length
#Create a pivot table to quickly calculate and visualize the data
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length >0))
average_ride_length
#Create a pivot table to quickly calculate and visualize the data
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length[ride_length>0]))
average_ride_length
#Create a pivot table to quickly calculate and visualize the data
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length[ride_length>0])/60)
#Create a pivot table to quickly calculate and visualize the data
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length[ride_length>0])/60)
average_ride_length
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length)/60)
average_ride_length
#Create a pivot table to quickly calculate and visualize the data
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length)/60)
average_ride_length
install.packages("outliers")
library("outliers")
vec <- c(44,55,45,46,47,10)
vec
mean(vec)
vec[!vec %in% outlier(vec)]
mean(vec[!vec %in% outlier])
mean(vec[!vec %in% outlier(vec)])
mean(vec[vec >=20])
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length)/60)
average_ride_length
file_2021_01$ride_length[!file_2021_01$ride_length %in% outlier(file_2021_01$ride_length)]
mean(file_2021_01$ride_length[!file_2021_01$ride_length %in% outlier(file_2021_01$ride_length)])
file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length[!ride_length %in% outlier(ride_length)])/60)
#mean after removing outliers
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length[!ride_length %in% outlier(ride_length)])/60)
average_ride_length
outlier(ride_length)
outlier(file2021_01$ride_length)
outlier(file_2021_01$ride_length)
max(file_2021_01$ride_length[!file_2021_01$ride_length %in% outlier(file_2021_01$ride_length)])
max(file_2021_01$ride_length[!file_2021_01$ride_length %in% outlier(file_2021_01$ride_length)])/60
average_users_dow <- file_2021_01 %>% group_by(day_of_week) %>% summarise(length=mean(ride_length[!ride_length %in% outlier(ride_length)])/60)
average_users_dow
no_of_rides <- file_2021_01 %>% group_by(day_of_week) %>% n_distinct(ride_id)%>% summarise(length=n())
colnames(file_2021_01)
average_users_dow
#Create a pivot table to quickly calculate and visualize the data
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length)/60)
average_ride_length
#mean after removing outliers
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length[!ride_length %in% outlier(ride_length)])/60)
average_ride_length
#Casual members have more rides
#average ride_length for users by day_of_week.
average_users_dow <- file_2021_01 %>% group_by(day_of_week) %>% summarise(length=mean(ride_length[!ride_length %in% outlier(ride_length)])/60)
average_users_dow
#saturday has the highest rides
#number of rides for users by day_of_week by adding Count of trip_id to Values
no_of_rides <- file_2021_01 %>% group_by(day_of_week) %>% summarise(length=n())
no_of_rides
file_2021_01 %>% group_by(day_of_week)
#Create a pivot table to quickly calculate and visualize the data
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length)/60)
average_ride_length
#mean after removing outliers
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length[!ride_length %in% outlier(ride_length)])/60)
average_ride_length
#Casual members have more rides
#average ride_length for users by day_of_week.
average_users_dow <- file_2021_01 %>% group_by(day_of_week) %>% summarise(length=mean(ride_length[!ride_length %in% outlier(ride_length)])/60)
average_users_dow
#saturday has the highest rides
#number of rides for users by day_of_week by adding Count of trip_id to Values
no_of_rides <- file_2021_01 %>% group_by(day_of_week) %>% n_distinct(ride_id) summarise(length=n())
file_2021_01 %>% group_by(day_of_week) %>% distinct(ride_id) summarise(length=n())
file_2021_01 %>% group_by(day_of_week) %>% distinct(ride_id) summarise(length=n())
file_2021_01 %>% group_by(day_of_week) %>% distinct(ride_id) summarise(length=n())
#Create a pivot table to quickly calculate and visualize the data
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length)/60)
average_ride_length
#mean after removing outliers
average_ride_length <- file_2021_01 %>% group_by(member_casual) %>% summarise(length=mean(ride_length[!ride_length %in% outlier(ride_length)])/60)
average_ride_length
#Casual members have more rides
#average ride_length for users by day_of_week.
average_users_dow <- file_2021_01 %>% group_by(day_of_week) %>% summarise(length=mean(ride_length[!ride_length %in% outlier(ride_length)])/60)
average_users_dow
#saturday has the highest rides
#number of rides for users by day_of_week by adding Count of trip_id to Values
no_of_rides <- file_2021_01 %>% group_by(day_of_week) %>% distinct(ride_id) %>% summarise(length=n())
no_of_rides
file_2021_01 %>% group_by(day_of_week) %>% distinct(ride_id) summarise(length=n())
file_2021_01 %>% group_by(day_of_week) %>% summarise(length=n())
boxplot(file_2021_01$ride_length)
max(file_2021_01$ride_length)
boxplot(file_2021_01$ride_length)
file_2021_01$ride_length
x<-file_2021_01$ride_length
boxplot(x)
boxplot(x)
boxplot(file_2021_01$ride_length)
?boxplot
boxplot(file_2021_01$ride_length)
boxplot(file_2021_01$ride_length,scale_y_log10())
boxplot(file_2021_01$ride_length)
boxplot(file_2021_01$ride_length)
boxplot(airquality
)
library ("dplyr")
library("readr")
file_2021_01 <- read_csv("202101-divvy-tripdata.csv")
getwd()
setwd("C:/Users/gmwende/OneDrive - Sybrin Systems (Pty) Ltd/Documents/R/ProjectsTest/Portfolio/Order/Orders_App")
library(shiny); runApp('Orders_app.R')
runApp('Orders_app.R')
runApp('Orders_app.R')
runApp('Orders_app.R')
runApp('Orders_app.R')
library(tidyverse)
library(readxl)
library(rio) #imports all excel sheets
library(qdapRegex)#check misplelt and missing entries
#library(qdap)
library(DT)
library(lubridate)
data <- import_list("STOREDATA.xlsx")
data_details <- data$DETAILS
data_orders <- data$ORDERS
#data cleaning
skimr::skim(data_details)
summary(data_details)
n_distinct(data_details)
sum(duplicated(data_details))#no duplicates found
sum(is.na(data_details))
#which_misspelled(data_details$Category,suggest=FALSE)
#data cleaning
skimr::skim(data_orders)
summary(data_orders)
n_distinct(data_orders)
sum(duplicated(data_orders))#no duplicates found
sum(is.na(data_orders))
#DATA ANALYSIS
#MERGE THE DATASET
data <- bind_rows(data_orders,data_details)
data2 <- merge(data_orders,data_details,by="Order ID",all = TRUE)
write.csv(data,"data.csv",row.names = FALSE)
#Add day and month column
data2$month<- month(data2$`Order Date`)
data2$day <- mday(data2$`Order Date`)
data2$quarter <- substr(quarters(data2$`Order Date`),2,2)
#Total Number of customers
cust_No <- na.omit(data$CustomerName) %>% n_distinct()
cust_No
cust_No2 <-na.omit(data2$CustomerName) %>% n_distinct()
cust_No2#336 customers
#Net profit
profit <-sum(data$Profit %>% na.omit())
profit
profit2 <- sum(data2$Profit)
profit2 #36963
#Most Profitable products
profitable_products<- data %>% group_by(Category) %>% summarise(profit=sum(Profit))  %>% na.omit()
profitable_products
profitable_product2s<- data2 %>% group_by(Category) %>% summarise(profit=sum(Profit))
datatable(profitable_product2s) #clothing is the most profitable then Electronics then furniture
#Visualize
ggplot(profitable_product2s,aes(Category,profit,fill=Category))+
geom_col()
#categories by quantity sold
data2 %>% group_by(Category) %>% summarise(quantity=sum(Quantity)) %>%
ggplot(aes(Category,quantity,fill=Category))+
geom_col()+
geom_text(aes(label=quantity))
#Most profitable sub category
profitable_subcat <- data2 %>% group_by(`Sub-Category`) %>% summarise(SubCat=sum(Profit))
datatable(profitable_subcat) #printers most profitable
#Visualize top 3 profitable product
data2 %>% group_by(`Sub-Category`) %>% summarise(SubCat=sum(Profit)) %>%
arrange(desc(SubCat)) %>%
head(3) %>%
ggplot(aes(`Sub-Category`,SubCat,fill=`Sub-Category`)) +
geom_col() #printers, bookcases,Saree
#Least profitable products
data2 %>% group_by(`Sub-Category`) %>% summarise(SubCat=sum(Profit)) %>%
arrange(desc(SubCat)) %>%
tail(3) %>%
ggplot(aes(`Sub-Category`,SubCat,fill=`Sub-Category`)) +
geom_col()+
coord_flip()
#Highest selling product
highest_selling<- data %>% group_by(`Sub-Category`) %>% summarise(Quantity=sum(Quantity))  %>% na.omit()
highest_selling
highest_selling2<- data2 %>% group_by(`Sub-Category`) %>% summarise(Quantity=sum(Quantity))
datatable(highest_selling2) #saree 795 pieces sold
#Highest paying customer
customer2<- data2 %>% group_by(CustomerName) %>% summarise(Amount=sum(Amount))
datatable(customer2) #Harivansh then MadhavM
#Visualize top5 paying customers
data2 %>% group_by(CustomerName) %>% summarise(Amount=sum(Amount)) %>% arrange(desc(Amount)) %>%
head(5) %>% ggplot(aes(CustomerName,Amount,fill=CustomerName))+
geom_col()
#customer who bought the most product
cust_prod <- data2 %>% group_by(CustomerName) %>% summarise(most=sum(Quantity))
datatable(cust_prod) #priyanka,Abhishek
data2 %>% group_by(CustomerName) %>% summarise(most=sum(Quantity)) %>% arrange(desc(most))%>%
head(6) %>%
ggplot(aes(CustomerName,most,fill=CustomerName))+
geom_col()
#Average product bought per day
avg_prod <- data2 %>% group_by(day) %>% summarise(total=sum(Quantity))
datatable(avg_prod) #10,8,14
mean(data2$Quantity)
#Most profitable months
profitable_month <- data2 %>% group_by(month) %>% summarise(total=sum(Profit))
datatable(profitable_month) #month 11 and 1
#monthly profit
ggplot(profitable_month,aes(month,total))+
geom_line()+
scale_x_continuous(n.breaks = 12)+
geom_text(aes(label = total))
#Amount of products sold per month
products_month <- data2 %>% group_by(month) %>% summarise(total=sum(Quantity))
datatable(products_month) #3 and 1
#No of products sold monthly
ggplot(products_month,aes(month,total,fill=total))+
geom_col()+
scale_x_continuous(n.breaks=12)
#Total quantity of products
Tot_quantity <- sum(data2$Quantity)
Tot_quantity #5615
#Region with most sales
region<- data2 %>% group_by(State) %>% summarise(Amount=sum(Amount))
datatable(region) #Maharashtra
city<- data2 %>% group_by(City) %>% summarise(Amount=sum(Quantity)) %>% mutate(pct=round((Amount/sum(Amount)*100),2))
datatable(city) #indore then Mumbai
#most popular payment method
payment<- data2 %>% group_by(PaymentMode) %>% summarise(Amount=sum(Quantity)) %>% mutate(pct=round((Amount/sum(Amount)*100),2))
datatable(payment) #COD
#Frequent Paying methods by pie chart
ggplot(payment,aes(x="",y=pct,fill=PaymentMode))+
geom_bar(stat = "identity",width = 1)+
coord_polar(theta = "y",start = 0)+
geom_text(aes(label=pct),position=position_stack(vjust = 0.5))+
guides(fill=guide_legend(title = "Payment Mode"))
#Visualization
#Quarterly Profit
quartely_profit <- data2 %>% group_by(quarter) %>% summarise(profit=sum(Profit))
datatable(quartely_profit)
ggplot(quartely_profit,aes(quarter,profit,fill=quarter))+
geom_col()
data2 %>% group_by(Category) %>% summarise(quantity=sum(Quantity))
runApp('Orders_app.R')
runApp('Orders_app.R')
runApp('Orders_app.R')
runApp('Orders_app.R')
runApp('Orders_app.R')
